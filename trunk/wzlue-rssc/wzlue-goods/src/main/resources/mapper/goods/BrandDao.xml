<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wzlue.goods.dao.BrandDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.wzlue.goods.entity.BrandEntity" id="brandMap">
        <result property="id" column="id"/>
        <result property="brandName" column="brand_name"/>
        <result property="sort" column="sort"/>
    </resultMap>

    <select id="queryObject" resultType="com.wzlue.goods.entity.BrandEntity">
		SELECT * FROM g_brand WHERE id = #{value}
	</select>

    <select id="queryList" resultType="com.wzlue.goods.entity.BrandEntity">
        SELECT * FROM g_brand
        <where>
            <if test="brandName!=null and brandName!=''">
                brand_name LIKE CONCAT('%',#{brandName},'%')
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                ORDER BY ${sidx} ${order}
            </when>
            <otherwise>
                ORDER BY id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        SELECT count(*) FROM g_brand
        <where>
            <if test="brandName!=null and brandName!=''">
                brand_name LIKE CONCAT('%',#{brandName},'%')
            </if>
        </where>
    </select>

    <insert id="save" parameterType="com.wzlue.goods.entity.BrandEntity" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO g_brand
		(
																				`brand_name`, 
																	`sort`
									)
		VALUES
		(
																				#{brandName}, 
																	#{sort}
									)
	</insert>

    <update id="update" parameterType="com.wzlue.goods.entity.BrandEntity">
        UPDATE g_brand
        <set>
            <if test="brandName != null">`brand_name` = #{brandName},</if>
            <if test="sort != null">`sort` = #{sort}</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
		DELETE FROM g_brand WHERE id = #{value}
	</delete>

    <delete id="deleteBatch">
        DELETE FROM g_brand WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>