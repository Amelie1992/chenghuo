<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wzlue.goods.dao.GoodsDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.wzlue.goods.entity.GoodsEntity" id="goodsMap">
        <result property="id" column="id"/>
        <result property="goodsName" column="goods_name"/>
        <result property="keywords" column="keywords"/>
        <result property="categoryId" column="category_id"/>
        <result property="brandId" column="brand_id"/>
        <result property="shopId" column="shop_id"/>
        <result property="price" column="price"/>
        <result property="payPrice" column="pay_price"/>
        <result property="picUrl" column="pic_url"/>
        <result property="stock" column="stock"/>
        <result property="warningStock" column="warning_stock"/>
        <result property="status" column="status"/>
        <result property="sort" column="sort"/>
        <result property="description" column="description"/>
        <result property="sign" column="sign"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="synopsis" column="synopsis"/>
        <result property="salesNum" column="sales_num"/>
        <result property="priceSection" column="price_section"/>
        <result property="freightTemplateId" column="freight_template_id"/>
        <association property="brand" javaType="com.wzlue.goods.entity.BrandEntity">
        	<result property="brandName" column="brand_name"/>
        </association>
        <association property="category" javaType="com.wzlue.goods.entity.CategoryEntity">
        	<result property="categoryName" column="category_name"/>
        </association>
        <collection property="tagList" select="queryTagList" column="id">
        	<result column="tag_name" property="tagName"/>
        </collection>
        
        <collection property="goodsPropertyList" select="queryGoodsPropertyList" column="id">
        	<result column="property_id" property="propertyId"/>
        	<result column="property_name" property="propertyName"/>
        	<result column="property_value" property="propertyValue"/>
        </collection>
    </resultMap>
    
    <select id="queryGoodsPropertyList" resultType="com.wzlue.goods.entity.GoodsPropertyEntity">
    	select gp.property_id, p.property_name, gp.property_value from g_goods_property gp left join g_property p on gp.property_id = p.id where gp.goods_id = #{value}
    </select>
    
    <select id="queryTagList" resultType="com.wzlue.goods.entity.TagEntity">
    	select t.* from g_goods_tag gt left join g_tag t on gt.tag_id = t.id where gt.goods_id = #{value}
    </select>

    <select id="queryObject" resultMap="goodsMap">
		SELECT g.*,b.brand_name, c.category_name FROM g_goods g
		LEFT JOIN g_category c ON g.category_id = c.id
		LEFT JOIN g_brand b ON g.brand_id = b.id
		 WHERE g.id = #{value}
	</select>

    <select id="queryList" resultType="com.wzlue.goods.entity.GoodsEntity">
        SELECT DISTINCT g.*,c.category_name AS 'category.categoryName',
        b.brand_name AS 'brand.brandName' FROM g_goods g
        LEFT JOIN g_category c ON g.category_id = c.id
		LEFT JOIN g_brand b ON g.brand_id = b.id
		LEFT JOIN g_goods_tag gt  ON gt.goods_id = g.id 
        <where>
            <if test="goodsName != null and goodsName !=''">
                g.goods_name like CONCAT('%',#{goodsName},'%')
            </if>
          <if test="sign != null">
              and  g.sign = #{sign}
          </if>
          <if test="status != null">
              and g.status = #{status}
          </if>
          <if test="categoryId != null">
              and g.category_id = #{categoryId}
          </if>
          <if test="brandId != null">
              and g.brand_id = #{brandId}
          </if>
            <if test="keywords != null and keywords != ''">
                and keywords like CONCAT('%',#{keywords},'%')
            </if>

          <if test="goodsName != null and goodsName != ''">
          	and g.goods_name like CONCAT('%',#{goodsName},'%')
          </if>
          <if test="tags != null and tags != ''">
          	and gt.tag_id in 
          	<foreach item="tag" collection="tags" open="(" separator="," close=")">
	            #{tag}
	        </foreach>
          </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                ORDER BY ${sidx} ${order}
            </when>
            <otherwise>
                ORDER BY g.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
		SELECT count(DISTINCT id) FROM g_goods g
        <where>
          <if test="sign != null">
              g.sign = #{sign}
          </if>
          <if test="status != null">
              and g.status = #{status}
          </if>
          <if test="categoryId != null">
              and g.category_id = #{categoryId}
          </if>
          <if test="brandId != null">
              and g.brand_id = #{brandId}
          </if>
          <if test="keywords != null and keywords != ''">
          	and keywords like CONCAT('%',#{keywords},'%')
          </if>
            <if test="goodsName != null and goodsName != ''">
                and g.goods_name like CONCAT('%',#{goodsName},'%')
            </if>
          <if test="tags != null and tags != ''">
          	and gt.tag_id in 
          	<foreach item="tag" collection="array" open="(" separator="," close=")">
	            #{tag}
	        </foreach>
          </if>
        </where>
	</select>

    <insert id="save" parameterType="com.wzlue.goods.entity.GoodsEntity" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO g_goods
		(
            `goods_name`,
        <if test="keywords != null">`keywords`,</if>
        <if test="categoryId != null"> category_id,</if>
        <if test="brandId != null">   brand_id,</if>
        <if test="price != null">    price,</if>
        <if test="payPrice != null">     pay_price,</if>
        <if test="picUrl != null">     pic_url,</if>
        <if test="stock != null">     stock,</if>
        <if test="status != null">    status,</if>
        <if test="description != null">     description,</if>
        <if test="sign != null">    sign,</if>
        <if test="synopsis != null">     synopsis,</if>
        <if test="priceSection != null">     price_section,</if>
        <if test="freightTemplateId != null">     freight_template_id,</if>
            `create_by`,
            `create_time`,
            `update_by`,
            `update_time`
		)
		VALUES
		(
            #{goodsName},
        <if test="keywords != null"> #{keywords},</if>
        <if test="categoryId != null"> #{categoryId},</if>
        <if test="brandId != null">   #{brandId},</if>
        <if test="price != null">     #{price},</if>
        <if test="payPrice != null">     #{payPrice},</if>
        <if test="picUrl != null">     #{picUrl},</if>
        <if test="stock != null">     #{stock},</if>
        <if test="status != null">     #{status},</if>
        <if test="description != null">     #{description},</if>
        <if test="sign != null">     #{sign},</if>
        <if test="synopsis != null">     #{synopsis},</if>
        <if test="priceSection != null">     #{priceSection},</if>
        <if test="freightTemplateId != null">     #{freightTemplateId},</if>
            #{createBy},
            now(),
            #{updateBy},
            now()
		)
	</insert>
	
	<update id="addSaleNum">
		update g_goods  set sales_num = sales_num+1 where id = #{value}
	</update>

    <update id="update" parameterType="com.wzlue.goods.entity.GoodsEntity">
        UPDATE g_goods
        <set>
            <if test="goodsName != null">`goods_name` = #{goodsName},</if>
            <if test="keywords != null">`keywords` = #{keywords},</if>
            <if test="categoryId != null">`category_id` = #{categoryId},</if>
            <if test="brandId != null">`brand_id` = #{brandId},</if>
            <if test="shopId != null">`shop_id` = #{shopId},</if>
            <if test="price != null">`price` = #{price},</if>
            <if test="payPrice != null">`pay_price` = #{payPrice},</if>
            <if test="picUrl != null">`pic_url` = #{picUrl},</if>
            <if test="stock != null">`stock` = #{stock},</if>
            <if test="warningStock != null">`warning_stock` = #{warningStock},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="sort != null">`sort` = #{sort},</if>
            <if test="description != null">`description` = #{description},</if>
            <if test="sign != null">`sign` = #{sign},</if>
            <if test="synopsis != null">`synopsis` = #{synopsis},</if>
            <if test="freightTemplateId != null">`freight_template_id` = #{freightTemplateId},</if>
            <if test="salesNum != null">`sales_num` = #{salesNum},</if>
            <if test="priceSection != null">`price_section` = #{priceSection},</if>
            <if test="updateBy != null">`update_by` = #{updateBy},</if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
		DELETE FROM g_goods  WHERE id = #{value}
	</delete>

    <delete id="deleteBatch">
        DELETE FROM g_goods  WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <update id="updateStatus">
        update g_goods set status = #{status} WHERE id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>