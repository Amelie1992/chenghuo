package com.wzlue.app.controller.goods;

import java.util.HashMap;
import java.util.List;
import java.util.Map;


import com.wzlue.goods.dao.GoodsSpecDao;
import com.wzlue.goods.entity.GoodsSpecEntity;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wzlue.app.common.annotation.Login;
import com.wzlue.app.common.config.JwtUtils;
import com.wzlue.common.base.R;
import com.wzlue.goods.entity.GoodsEntity;
import com.wzlue.goods.service.GoodsCollectionService;
import com.wzlue.goods.service.GoodsFootprintService;
import com.wzlue.goods.service.GoodsService;

import io.jsonwebtoken.Claims;

import javax.jws.Oneway;

/**
 * 商品
 * @author wzlue
 *
 */
@RestController
@RequestMapping("/app/goods")
public class ApiGoodsController {
	
	@Autowired
	private GoodsService goodsService;
	
	@Autowired
	private GoodsFootprintService goodsFootprintService;
	
	@Autowired
	private GoodsCollectionService goodsCollectionService;
	
	@Autowired
    private JwtUtils jwtUtils;

	@Autowired
	private GoodsSpecDao goodsSpecDao;
	
	/**
	 * 商品列表
	 * @return
	 */
	@RequestMapping("/list")
	public R list(@RequestParam Map<String, Object> params){
			if(params.get("tags") != null) {
			params.put("tags", params.get("tags").toString().split(","));
			}
            if(params.get("categoryId")!=null){
				if(params.get("categoryId").equals("0")){
					params.clear();
				}
			}
			params.put("status",1);
		   List<GoodsEntity> goodsList = goodsService.queryList(params);


		return R.ok().put("goodsList", goodsList);
	}
	
	/**
	 * 商品详情
	 * @return
	 */
	@RequestMapping("/detail")
	public R detail(Long id, String token){
		GoodsEntity goods = goodsService.queryObject(id);
		if(!StringUtils.isEmpty(token)){
			Claims claims = jwtUtils.getClaimByToken(token);
			String userId = claims.getSubject();
			
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("goodsId", id);
			map.put("memberId", userId);
			
			int total = goodsCollectionService.queryTotal(map);
			if(total > 0){
				goods.setCollection(true);
			}
		}
		
		return R.ok().put("goods", goods);
	}
	//根据类别id查询产品
	@RequestMapping("/selectGoods")
	public R selectGoods(@RequestParam Map<String, Object> params){
		params.put("status",1);
		List<GoodsEntity> goodsList = goodsService.queryList(params);
		return R.ok().put("goodsList", goodsList);
	}
	
	@Login
	@RequestMapping("/footprint")
	public R footprint(Long id, @RequestAttribute("userId") Long userId){
		goodsFootprintService.footprint(id, userId);
		return R.ok();
	}
	
	@Login
	@RequestMapping("/collection")
	public R collection(Long id, @RequestAttribute("userId") Long userId){
		goodsCollectionService.collection(id, userId);
		return R.ok();
	}
	
	@RequestMapping("/isCollection")
	public R isCollection(Long id, @RequestAttribute("userId") Long userId){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("memberId", userId);
		map.put("goodsId", id);
		
		int total = goodsCollectionService.queryTotal(map);
		if(total > 0){
			return R.ok().put("isCollection", true);
		}
		return R.ok().put("isCollection", false);
	}

	/**
	 * 获取规格的信息
	 * @return
	 */
	@RequestMapping("/getSpecs")
	public R getSpecs(Long id){
			//根据产品获取规格
			List<GoodsSpecEntity> goodsSpecEntities = goodsSpecDao.getSpecs(id);
			return  R.ok().put("goodsSpecEntities",goodsSpecEntities);
	}

	@RequestMapping("/getSpecPrice")
	public R getSpecPrice(Long id){
		GoodsSpecEntity goodsSpecEntity=goodsSpecDao.queryObject(id);
		return  R.ok().put("goodsSpecEntity",goodsSpecEntity);
	}

	
}
