package com.wzlue.app.controller.order;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wzlue.app.common.annotation.Login;
import com.wzlue.common.base.R;
import com.wzlue.order.entity.OrderEntity;
import com.wzlue.order.entity.OrderGoodsEntity;
import com.wzlue.order.service.OrderGoodsService;
import com.wzlue.order.service.OrderService;

@RestController
@RequestMapping("/app/order")
public class ApiOrderController {
	
	@Autowired
	private OrderService orderService;
	@Autowired
	private OrderGoodsService orderGoodsService;
	
	@Login
	@RequestMapping("/list")
	public R list(@RequestParam Map<String, Object> params, @RequestAttribute("userId") Long userId){
		params.put("memberId", userId);
		if(params.get("statuses") != null){
			params.put("statuses", params.get("statuses").toString().split(","));
		}
		List<OrderEntity> orderList = orderService.queryList(params);
		return R.ok().put("orderList", orderList);
	}
	
	@Login
	@RequestMapping("/create")
	public R create(@RequestBody OrderEntity order, @RequestAttribute("userId") Long userId){
		order.setMemberId(userId);
		order.setCreateTime(new Date());
		order.setStatus(1);
		orderService.create(order);
		return R.ok().put("orderNumber", order.getOrderNumber()).put("paymentAmount", order.getPaymentAmount());
	}
	
	@Login
	@RequestMapping("/statistics")
	public R statistics(@RequestAttribute("userId") Long userId){
		Map<String, Object> statistics = orderService.statistics(userId);
		return R.ok(statistics);
	}
	
	@Login
	@RequestMapping("/detail")
	public R detail(Long id, @RequestAttribute("userId") Long userId){
		OrderEntity order = orderService.queryObject(id);
		return R.ok().put("order", order);
	}
	
	@Login
	@RequestMapping("/orderGoods")
	public R orderGoods(String orderNumber, @RequestAttribute("userId") Long userId){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("orderNumber", orderNumber);
		map.put("memberId", userId);
		List<OrderGoodsEntity> orderGoodsList = orderGoodsService.queryList(map);
		return R.ok().put("orderGoodsList", orderGoodsList);
	}
	
	@Login
	@RequestMapping("/cancel")
	public R cancel(Long id, @RequestAttribute("userId") Long userId){
		OrderEntity order = new OrderEntity();
		order.setId(id);
		order.setStatus(0);
		orderService.update(order);
		return R.ok();
	}
	
	@Login
	@RequestMapping("/complete")
	public R complete(Long id, @RequestAttribute("userId") Long userId){
		OrderEntity order = new OrderEntity();
		order.setId(id);
		order.setStatus(7);
		orderService.update(order);
		return R.ok();
	}

}
